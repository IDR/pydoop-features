#!/usr/bin/env python

# BEGIN_COPYRIGHT
#
# Copyright (C) 2014-2016 CRS4.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# END_COPYRIGHT

"""\
Output a text representation of an Avro file.
"""

import sys
import warnings
import argparse
import pprint

try:
    from pyavroc import AvroFileReader
except ImportError:
    from pyfeatures.pyavroc_emu import AvroFileReader
    warnings.warn("pyavroc not found, using standard avro lib\n")


def make_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('in_fn', metavar='AVRO_CONTAINER',
                        help='avro input file with serialized features')
    parser.add_argument('-o', '--out-fn', metavar='FILE',
                        help="output file (default: write to stdout)")
    parser.add_argument('-n', '--num-records', type=int, metavar='INT',
                        help="number of records to output (default: all)")
    return parser


def main(argv):
    parser = make_parser()
    args = parser.parse_args(argv)
    try:
        fo = open(args.out_fn, "w")
    except TypeError:
        fo = sys.stdout
    with open(args.in_fn) as f:
        reader = AvroFileReader(f)
        pp = pprint.PrettyPrinter(stream=fo)
        for i, r in enumerate(reader):
            if args.num_records is not None and i >= args.num_records:
                break
            pp.pprint(r)
    if fo is not sys.stdout:
        fo.close()


if __name__ == '__main__':
    main(sys.argv[1:])
