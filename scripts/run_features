#!/bin/bash

set -eu

die() {
    echo "$1" 1>&2
    exit 1
}

minargs=2
if [ $# -lt ${minargs} ]; then
    die "Usage: $0 DFS_INPUT DFS_OUTPUT [PLANES_PER_MAP] [METADATA_FILE]"
fi
DFS_INPUT=$1
MR_OUTPUT=$2
PLANES_PER_MAP=$3
METADATA_FILE=$4
[ -z "${PLANES_PER_MAP}" ] && PLANES_PER_MAP=0  # entire series
if [ -n "${METADATA_FILE}" ]; then
    METADATA_FILE_OPT="-D it.crs4.features.metadatafile=${METADATA_FILE}"
else
    METADATA_FILE_OPT=""
fi

SCRIPTS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd; cd - >/dev/null)
REPO_ROOT=$(dirname "${SCRIPTS_DIR}")
PKG=( "${REPO_ROOT}"/target/pydoop-features-*.jar )
if [ ! -e ${PKG[0]} ]; then
    pushd "${REPO_ROOT}"
    mvn clean compile assembly:single
    popd
    PKG=( "${REPO_ROOT}"/target/pydoop-features-*.jar )
fi
FEATURES_JAR=${PKG[0]}

OUT_SCHEMA_F="${REPO_ROOT}"/src/main/avro/Signatures.avsc
OUT_SCHEMA=$(cat "${OUT_SCHEMA_F}")

MODULE=features
MPY=${MODULE}.py
JOBNAME=${MODULE}-job
LOGLEVEL=DEBUG
INPUT_FORMAT=it.crs4.features.BioImgInputFormat

hdfs dfs -rm -r -f "${MR_OUTPUT}"
pydoop submit \
    -D it.crs4.features.planespermap="${PLANES_PER_MAP}" \
    -D pydoop.mapreduce.avro.value.output.schema="${OUT_SCHEMA}" \
    --upload-file-to-cache ${MPY} \
    --num-reducers 0 \
    --input-format ${INPUT_FORMAT} \
    --avro-input v \
    --avro-output v \
    --libjars ${FEATURES_JAR} \
    --log-level ${LOGLEVEL} \
    --job-name ${JOBNAME} \
    ${MODULE} "${DFS_INPUT}" "${MR_OUTPUT}" \
    "${METADATA_FILE_OPT}"
