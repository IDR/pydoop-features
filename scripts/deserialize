#!/usr/bin/env python

# BEGIN_COPYRIGHT
#
# Copyright (C) 2014-2015 CRS4.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy
# of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# END_COPYRIGHT

import sys
import os
import warnings
import argparse

try:
    from pyavroc import AvroFileReader
except ImportError:
    from avro.datafile import DataFileReader
    from avro.io import DatumReader
    class AvroFileReader(DataFileReader):
        def __init__(self, f):
            super(AvroFileReader, self).__init__(f, DatumReader())
    warnings.warn("pyavroc not found, using standard avro lib\n")
import numpy as np

from bioimg import BioImgPlane


def make_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('avro_file', metavar='AVRO_FILE')
    parser.add_argument('out_dir', metavar='OUT_DIR')
    return parser


# no schema needed for deserialization
def iterplanes(avro_file):
    with open(avro_file, 'rb') as f:
        reader = AvroFileReader(f)
        for r in reader:
            yield BioImgPlane(r)


def main(argv):
    parser = make_parser()
    args = parser.parse_args(argv)
    try:
        os.makedirs(args.out_dir)
    except OSError as e:
        sys.exit('Cannot create output dir: %s' % e)
    for p in iterplanes(args.avro_file):
        pixels = p.get_xy()
        print p.name, p.dimension_order, pixels.shape
        print pixels[:2, :2]
        out_bn = '%s-z%04d-c%04d-t%04d.npy' % (p.name, p.z, p.c, p.t)
        out_fn = os.path.join(args.out_dir, out_bn)
        np.save(out_fn, pixels)


if __name__ == '__main__':
    main(sys.argv[1:])
