#!/bin/bash

# NOTE: PLANES_PER_MAP must be a multiple of the image set size

set -eu

die() {
    echo "$1" 1>&2
    exit 1
}

minargs=3
if [ $# -lt ${minargs} ]; then
    die "Usage: $0 INPUT OUTPUT PIPELINE [PLANES_PER_MAP]"
fi
INPUT=$1
OUTPUT=$2
PIPELINE_FN=$3
PIPELINE_BN=$(basename "${PIPELINE_FN}")
PLANES_PER_MAP=0  # default: entire series
[ $# -gt ${minargs} ] && PLANES_PER_MAP=$4
# TODO: add support for metadata file, as in run_features

SCRIPTS_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd; cd - >/dev/null)
REPO_ROOT=$(dirname "${SCRIPTS_DIR}")
PKG=( "${REPO_ROOT}"/target/pydoop-features-*.jar )
if [ ! -e ${PKG[0]} ]; then
    pushd "${REPO_ROOT}"
    mvn clean compile assembly:single
    popd
    PKG=( "${REPO_ROOT}"/target/pydoop-features-*.jar )
fi
FEATURES_JAR=${PKG[0]}

MODULE=cell_profiler_example
MPY=${MODULE}.py
JOBNAME=${MODULE}-job
LOGLEVEL=DEBUG
INPUT_FORMAT=it.crs4.features.BioImgInputFormat

hdfs dfs -rm -r -f "${OUTPUT}"
pydoop submit \
    -D it.crs4.features.cppipe="${PIPELINE_BN}" \
    -D it.crs4.features.planespermap="${PLANES_PER_MAP}" \
    --upload-file-to-cache "${PIPELINE_FN}" \
    --upload-file-to-cache ${MPY} \
    --num-reducers 0 \
    --input-format ${INPUT_FORMAT} \
    --avro-input v \
    --libjars ${FEATURES_JAR} \
    --log-level ${LOGLEVEL} \
    --job-name ${JOBNAME} \
    ${MODULE} "${INPUT}" "${OUTPUT}"
